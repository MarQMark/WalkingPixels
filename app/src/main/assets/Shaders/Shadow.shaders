#shader vertex
#version 310 es
#extension GL_ANDROID_extension_pack_es31a : enable

in vec4 a_Position;
in vec2 a_TexCoord;
in vec3 a_Normal;
in vec4 a_Color;
in float a_TextureSlot;

uniform mat4 u_LightProjection;

out vec4 v_FragPos;
out vec2 v_TexCoord;
out vec3 v_Normal;
out vec4 v_Color;
out float v_TextureSlot;

void main()
{
    gl_Position = u_LightProjection  * vec4(a_Position.x, a_Position.y, a_Position.z, 1.0);
    v_FragPos = a_Position;
    v_Normal = a_Normal;
    v_Color = a_Color;
    v_TexCoord = a_TexCoord;
    v_TextureSlot = a_TextureSlot;
}


#shader fragment
#version 310 es
#extension GL_ANDROID_extension_pack_es31a : enable

precision mediump float;

in vec4 v_FragPos;
in vec2 v_TexCoord;
in vec3 v_Normal;
in vec4 v_Color;
in float v_TextureSlot;

uniform sampler2D u_Textures[4];
uniform vec3 u_LightPosition;
uniform float u_FarPlane;

out vec4 color;

void main()
{
    if(texture(u_Textures[int(v_TextureSlot)], v_TexCoord).a <= 0.1){
        discard;
    }

    gl_FragDepth = length(v_FragPos.xyz - u_LightPosition) / u_FarPlane + 0.0001;

    //This just exist so openGL doesn't remove the unused variables
    color = v_Color * vec4(v_Normal, 1.0);
}