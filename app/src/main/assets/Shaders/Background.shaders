#shader vertex

attribute vec4 a_Position;
attribute vec2 a_TexCoord;
attribute vec3 a_Normal;
attribute vec4 a_Color;
attribute float a_TextureSlot;

varying vec2 v_TexCoord;
varying vec3 v_Normal;
varying vec3 v_CurrentPosition;
varying vec4 v_Color;
varying float v_TextureSlot;

uniform mat4 mvpmatrix;

void main()
{
    gl_Position = a_Position;

    v_TexCoord = a_TexCoord;
    v_TextureSlot =  a_TextureSlot;
}


#shader fragment

precision mediump float;

varying vec2 v_TexCoord;
varying float v_TextureSlot;

uniform sampler2D u_Textures[4];

void main()
{
        int index = int(v_TextureSlot);
        gl_FragColor = texture2D(u_Textures[index], v_TexCoord);
}